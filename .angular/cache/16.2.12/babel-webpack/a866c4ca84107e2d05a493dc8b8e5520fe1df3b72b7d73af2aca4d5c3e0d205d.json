{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction DynamicFormComponent_div_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DynamicFormComponent_div_1_input_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 8);\n  }\n  if (rf & 2) {\n    const formGroupD_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"formControlName\", formGroupD_r1.key)(\"id\", formGroupD_r1.key)(\"type\", formGroupD_r1.type);\n  }\n}\nfunction DynamicFormComponent_div_1_select_6_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const opt_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", opt_r7.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(opt_r7.value);\n  }\n}\nfunction DynamicFormComponent_div_1_select_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 9);\n    i0.ɵɵtemplate(1, DynamicFormComponent_div_1_select_6_option_1_Template, 2, 2, \"option\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const formGroupD_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"id\", formGroupD_r1.key)(\"formControlName\", formGroupD_r1.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", formGroupD_r1.options);\n  }\n}\nfunction DynamicFormComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, DynamicFormComponent_div_1_span_3_Template, 2, 0, \"span\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵtemplate(5, DynamicFormComponent_div_1_input_5_Template, 1, 3, \"input\", 5);\n    i0.ɵɵtemplate(6, DynamicFormComponent_div_1_select_6_Template, 2, 3, \"select\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const formGroupD_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"for\", formGroupD_r1.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", formGroupD_r1.label, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", formGroupD_r1 == null ? null : formGroupD_r1.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", formGroupD_r1.controlType);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"textbox\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"dropdown\");\n  }\n}\nexport class DynamicFormComponent {\n  constructor() {\n    this.formGroups = [];\n    this.submitFormValuesData = new EventEmitter();\n  }\n  ngOnInit() {\n    this.form = this.toFormGroup();\n    console.log('form====', this.form);\n  }\n  submitFormValues() {\n    if (this.form.valid) {\n      this.submitFormValuesData.emit(this.form.value);\n    } else {\n      alert('Please fill mandatory fields');\n    }\n  }\n  toFormGroup() {\n    const group = {};\n    this.formGroups.forEach(formGroup => {\n      group[formGroup.key] = formGroup.required ? new FormControl(formGroup.value || '', Validators.required) : new FormControl(formGroup.value || '');\n    });\n    return new FormGroup(group);\n  }\n  static #_ = this.ɵfac = function DynamicFormComponent_Factory(t) {\n    return new (t || DynamicFormComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DynamicFormComponent,\n    selectors: [[\"app-dynamic-form\"]],\n    inputs: {\n      formGroups: \"formGroups\"\n    },\n    outputs: {\n      submitFormValuesData: \"submitFormValuesData\"\n    },\n    decls: 4,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [4, \"ngFor\", \"ngForOf\"], [2, \"margin-top\", \"15px\", 3, \"click\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [3, \"ngSwitch\"], [3, \"formControlName\", \"id\", \"type\", 4, \"ngSwitchCase\"], [3, \"id\", \"formControlName\", 4, \"ngSwitchCase\"], [2, \"color\", \"red\"], [3, \"formControlName\", \"id\", \"type\"], [3, \"id\", \"formControlName\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function DynamicFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DynamicFormComponent_div_1_Template, 7, 6, \"div\", 1);\n        i0.ɵɵelementStart(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function DynamicFormComponent_Template_button_click_2_listener() {\n          return ctx.submitFormValues();\n        });\n        i0.ɵɵtext(3, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.formGroups);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","formGroupD_r1","key","type","opt_r7","ɵɵadvance","ɵɵtextInterpolate","value","ɵɵtemplate","DynamicFormComponent_div_1_select_6_option_1_Template","options","DynamicFormComponent_div_1_span_3_Template","DynamicFormComponent_div_1_input_5_Template","DynamicFormComponent_div_1_select_6_Template","ɵɵattribute","ɵɵtextInterpolate1","label","required","controlType","DynamicFormComponent","constructor","formGroups","submitFormValuesData","ngOnInit","form","toFormGroup","console","log","submitFormValues","valid","emit","alert","group","forEach","formGroup","_","_2","selectors","inputs","outputs","decls","vars","consts","template","DynamicFormComponent_Template","rf","ctx","DynamicFormComponent_div_1_Template","ɵɵlistener","DynamicFormComponent_Template_button_click_2_listener"],"sources":["/home/pankaj/Desktop/github/dynamic-form/src/app/shared/dynamic-form/dynamic-form.component.ts","/home/pankaj/Desktop/github/dynamic-form/src/app/shared/dynamic-form/dynamic-form.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.scss'],\n})\nexport class DynamicFormComponent {\n  @Input() formGroups: any = [];\n  form!: FormGroup;\n  @Output() submitFormValuesData = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {\n    this.form = this.toFormGroup();\n    console.log('form====', this.form);\n  }\n\n  submitFormValues() {\n    if (this.form.valid) {\n      this.submitFormValuesData.emit(this.form.value);\n    } else {\n      alert('Please fill mandatory fields');\n    }\n  }\n\n  toFormGroup() {\n    const group: any = {};\n\n    this.formGroups.forEach(\n      (formGroup: { key: string | number; required: any; value: any }) => {\n        group[formGroup.key] = formGroup.required\n          ? new FormControl(formGroup.value || '', Validators.required)\n          : new FormControl(formGroup.value || '');\n      }\n    );\n    return new FormGroup(group);\n  }\n}\n","<div [formGroup]=\"form\">\n  <div *ngFor=\"let formGroupD of formGroups\">\n    <label [attr.for]=\"formGroupD.key\">{{formGroupD.label}} <span *ngIf=\"formGroupD?.required\" style=\"color: red;\">*</span></label>\n\n  <div [ngSwitch]=\"formGroupD.controlType\">\n\n    <input *ngSwitchCase=\"'textbox'\" [formControlName]=\"formGroupD.key\"\n            [id]=\"formGroupD.key\" [type]=\"formGroupD.type\">\n\n    <select [id]=\"formGroupD.key\" *ngSwitchCase=\"'dropdown'\" [formControlName]=\"formGroupD.key\">\n      <option *ngFor=\"let opt of formGroupD.options\" [value]=\"opt.key\">{{opt.value}}</option>\n    </select>\n\n  </div>\n  </div>\n\n  <button style=\"margin-top: 15px\" (click)=\"submitFormValues()\">Submit</button>\n</div>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}